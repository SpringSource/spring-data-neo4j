<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.docbook.org/xml/4.4/docbookx.dtd">
<chapter id="tutorial_domain">
    <title>The domain model</title>
    <subtitle>Setting the stage</subtitle>
    <para>
        We wanted to outline the domain model before diving into library details. We also looked at the
        data model of the themoviedb.org data to confirm that it matched our expectations.
    </para>
    <para>
        <mediaobject>
            <imageobject>
                <!--
                        http://yuml.me/diagram/scruffy;dir:lr/class/%23%20Cineasts.net%20Domain,%20%5BActor%7Cname;%7CplayedIn()%5D*-ACTS_IN-%3E%5BRole%7Cname;%5D,%20%5BRole%5D-ACTS_IN-%3E*%5BMovie%7Ctitle;year%5D,%20%5BUser%7Clogin;name;password;%7Crate();befriend();%5D*-RATED-%3E%5BRating%7Cstars;comment;%5D,%20%5BRating%5D-RATED-%3E*%5BMovie%5D,%20%5BUser%5D*-FRIEND-%3E*%5BUser%5D.png
                -->
                <imagedata fileref="domain.png"/>
            </imageobject>
        </mediaobject>

    </para>
    <para>
        In Java code this looks pretty straightforward:
    </para>
    <para>
        <example>
            <title>Domain model</title>
            <programlisting lang="java" language="java" role="java" ><![CDATA[class Movie {
    String id;
    String title;
    int year;
    Set<Role> cast;
}

class Actor {
    String id;
    String name;
    Set<Movie> filmography;
    Role playedIn(Movie movie, String role) { ... }
}

class Role {
    Movie movie;
    Actor actor;
    String role;
}

class User {
    String login;
    String name;
    String password;
    Set<Rating> ratings;
    Set<User> friends;
    Rating rate(Movie movie, int stars, String comment) { ... }
    void befriend(User user) { ... }
}

class Rating {
    User user;
    Movie movie;
    int stars;
    String comment;
}
]]></programlisting>
        </example>
    </para>
    <para>
        Then we wrote some simple tests to show that the basic design of the domain is good enough so far. Just creating
        a movie, populating it with actors, and allowing users to rate it.
    </para>
</chapter>
